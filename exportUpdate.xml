<?xml version="1.0" encoding="UTF-8"?>
<project name="org.eclipse.imp.update" default="build.update.zip" basedir=".">
	<import file="./buildCommon.xml"/>

    <target name="init">
        <tstamp>
            <format property="build.time" pattern="yyyyMMddHHmm"/> 
        </tstamp>
        <property name="imp.build.qualifier" value="v${build.time}"/>
        <echo message="Build qualifier is ${imp.build.qualifier}"/>

        <property name="update.name"        value="org.eclipse.imp.update"/>
        <property name="update.version"     value="${imp.build.qualifier}"/>
        <property name="update.temp.folder" value="${basedir}/update.temp.folder"/>
        <property name="update.destination" value="${basedir}"/>
        <property name="update.server"      value="dev.eclipse.org"/>
        <property name="update.server.dir"  value=""/>
        <property name="zip.file"           value="${update.destination}/${update.name}_${update.version}.zip"/>
    </target>

	<property
		name="feature.list"
		value="org.eclipse.imp.analysis,org.eclipse.imp.analysis.ui,org.eclipse.imp.formatting,org.eclipse.imp.java.hosted,org.eclipse.imp.lpg,org.eclipse.imp.metatooling,org.eclipse.imp.runtime"/>

	<target name="publish.zip" depends="init" description="Copies the update archive to the update server.">
		<echo message="Copying update zip file to update server ${update.server}"/>
		<scp file="${zip.file}" keyfile="${user.home}/.ssh/id_dsa" passphrase="" todir="${user.name}@${update.server}:${update.server.dir}"></scp>
	</target>

    <target name="build.update.zip">
        <antcall target="collect.update"/>
    	<antcall target="build.site.xml"/>
        <antcall target="zip.update"/>
    </target>

   <!-- One would typically run this target, then manually edit the site.xml to add the
        new feature versions, and finally run 'zip.update' to build the update site archive. -->
   <target name="collect.update" depends="init" description="Builds and collects all the feature and plugin components for the update site.">
        <delete dir="${update.temp.folder}"/>
        <mkdir dir="${update.temp.folder}"/>
        <antcall target="export.features"/>
        <for param="feature" values="${feature.list}">
            <antcall target="copy.feature">
                <param name="feature.name"    value="${feature}"/>
                <param name="feature.dir"     value="../${feature}.feature"/>
            </antcall>
        </for>

        <copy file="site.xml" todir="${update.temp.folder}" failonerror="true" overwrite="false"/>
        <copy file="index.html" todir="${update.temp.folder}" failonerror="true" overwrite="false"/>

        <mkdir dir="${update.temp.folder}/web"/>
        <copy todir="${update.temp.folder}/web" failonerror="true" overwrite="false">
            <fileset dir="${basedir}/web" includes="site.css"/>
            <fileset dir="${basedir}/web" includes="site.xsl"/>
        </copy>

        <antcall target="get.lpg.artifacts"/>
        <antcall target="get.polyglot.artifacts"/>
    </target>

    <target name="build.site.xml" depends="init">
    	<property name="site" value="${update.temp.folder}/site.xml"/>

    	<echo file="${site}" append="false" message="&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?>${line.separator}"/>
    	<echo file="${site}" append="true" message="&lt;site>${line.separator}" />
        <echo file="${site}" append="true" message="    &lt;description url=&quot;http://download.eclipse.org/technology/imp/updates/&quot;>${line.separator}"/>
    	<echo file="${site}" append="true" message="        This Eclipse update site hosts the distribution for the IMP IDE, analysis and refactoring framework, and related components.${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;/description>${line.separator}"/>

        <antcall target="add.site.categories"/>

        <antcall target="add.features.sdf"/>
        <antcall target="add.features.lpg"/>
        <antcall target="add.features.polyglot"/>
    	<antcall target="add.features.imp"/>

    	<echo file="${site}" append="true" message="&lt;/site>${line.separator}"/>
    </target>

    <target name="add.site.categories">
<!--    <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP IDE Runtime&quot; label=&quot;IMP IDE Runtime&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP IDE Development Tools&quot; label=&quot;IMP IDE Development Tools&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP Language-Specific Development Environments&quot; label=&quot;IMP Language-Specific Development Environments&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP Analysis&quot; label=&quot;IMP Analysis&quot;/>${line.separator}"/>
  -->
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP&quot; label=&quot;IMP&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;IMP Source&quot; label=&quot;IMP Source&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;category-def name=&quot;Prereqs&quot; label=&quot;IMP Prerequisites&quot;/>${line.separator}"/>
    </target>

    <target name="add.features.sdf">
        <antcall target="add.feature">
            <param name="feature.id"      value="sdf_eclipse_installer_feature"/>
            <param name="feature.version" value="1.0.10"/>
            <param name="category"        value="Prereqs"/>
        </antcall>
    </target>

    <target name="add.features.lpg">
        <antcall target="add.feature">
            <param name="feature.id"      value="lpg.generator"/>
            <param name="feature.version" value="2.0.17"/>
            <param name="category"        value="Prereqs"/>
        </antcall>
        <antcall target="add.feature">
            <param name="feature.id"      value="lpg.runtime"/>
            <param name="feature.version" value="2.0.17"/>
            <param name="category"        value="Prereqs"/>
        </antcall>
    </target>

    <target name="add.features.polyglot">
        <antcall target="add.feature">
            <param name="feature.id"      value="polyglot"/>
            <param name="feature.version" value="2.4.0"/>
            <param name="category"        value="Prereqs"/>
        </antcall>
    </target>

    <target name="add.features.imp">
        <for param="feature.id" values="${feature.list}" separator=",">
            <xmlproperty file="../${feature.id}.feature/feature.xml"/>
            <propertyRegexp name="feature.version" input="${feature(version)}" regexp="(.*).qualifier" value="\1.${imp.build.qualifier}"/>
            <antcall target="add.bin.src.features">
                <param name="feature.id"      value="${feature.id}"/>
                <param name="feature.version" value="${feature.version}"/>
                <param name="category"        value="IMP"/>
            </antcall>
        </for>
    </target>

    <target name="add.bin.src.features">
        <antcall target="add.feature">
            <param name="feature.id"      value="${feature.id}"/>
            <param name="feature.version" value="${feature.version}"/>
            <param name="category"        value="${category}"/>
        </antcall>
        <antcall target="add.feature">
            <param name="feature.id"      value="${feature.id}.source"/>
            <param name="feature.version" value="${feature.version}"/>
            <param name="category"        value="IMP Source"/>
        </antcall>
    </target>

    <target name="add.feature">
        <echo file="${site}" append="true" message="    &lt;feature url=&quot;features/${feature.id}_${feature.version}.jar&quot;${line.separator}"/>
        <echo file="${site}" append="true" message="        id=&quot;${feature.id}&quot;${line.separator}"/>
        <echo file="${site}" append="true" message="        version=&quot;${feature.version}&quot;>${line.separator}"/>
        <echo file="${site}" append="true" message="        &lt;category name=&quot;${category}&quot;/>${line.separator}"/>
        <echo file="${site}" append="true" message="    &lt;/feature>${line.separator}"/>
    </target>

    <target name="zip.update" depends="init" description="Creates the update site archive from the components collected by collect.update">
<!--    <loadfile property="saved.build.qualifier" srcfile=".build.qualifier"/>
        <propertyRegexp name="imp.version.prefix" input="${imp.feature(version)}" regexp="(.*).qualifier" value="\1"/>
        <echo message="*** The saved build qualifier is ... the envelope please... ${saved.build.qualifier}"/>
  -->
        <property name="zip.file.name" value="${update.destination}/${update.name}_${update.version}.zip"/>

        <zip destfile="${zip.file.name}" basedir="${update.temp.folder}" filesonly="false" whenempty="skip" update="false"/>

        <delete dir="${update.temp.folder}"/>
    </target>

    <target name="copy.feature">
        <xmlproperty file="${feature.dir}/feature.xml" prefix="f"/>

		<echo message="  ** Copying contents of feature ${feature.name} version ${f.feature(version)} from directory ${feature.dir}"/>

		<propertyRegexp name="feature.version" input="${f.feature(version)}" regexp="(.*).qualifier" value="\1.${imp.build.qualifier}"/>

		<mkdir dir="${update.temp.folder}/features"/>
		<copy todir="${update.temp.folder}/features" failonerror="true" overwrite="false">
			<fileset dir="${feature.dir}" includes="${feature.name}_${feature.version}.jar,${feature.name}.source_${feature.version}.jar"/>
		</copy>

		<mkdir dir="${update.temp.folder}/plugins"/>
		<copy todir="${update.temp.folder}/plugins" failonerror="true" overwrite="false">
			<fileset dir="${feature.dir}/plugins" includes="*.jar"/>
		</copy>
	</target>

    <target name="get.lpg.artifacts">
        <delete dir="../lpg.update/plugins" includes="*.jar"/>
        <delete dir="../lpg.update/features" includes="*.jar"/>

        <ant antfile="../lpg.update/exportUpdate.xml" target="build.plugins"/>
        <ant antfile="../lpg.update/exportUpdate.xml" target="build.features"/>

        <copy todir="${update.temp.folder}/plugins" failonerror="true" overwrite="false">
           <fileset dir="../lpg.update/plugins" includes="*.jar"/>
        </copy>
        <copy todir="${update.temp.folder}/features" failonerror="true" overwrite="false">
            <fileset dir="../lpg.update/features" includes="*.jar"/>
        </copy>
    </target>

    <target name="get.polyglot.artifacts">
        <!-- The name of the IMP project containing the Polyglot source snapshot is "polyglot2". -->
        <delete dir="../polyglot/eclipseUpdates/plugins" includes="*.jar"/>
        <delete dir="../polyglot/eclipseUpdates/features" includes="*.jar"/>

        <ant antfile="../polyglot/build.xml" dir="../polyglot" target="build-plugin"/>
        <ant antfile="../polyglot/build.xml" dir="../polyglot" target="build-features"/>

        <copy todir="${update.temp.folder}/plugins" failonerror="true" overwrite="false">
           <fileset dir="../polyglot/eclipseUpdates/plugins" includes="polyglot_*.jar"/>
        </copy>
        <copy todir="${update.temp.folder}/features" failonerror="true" overwrite="false">
           <fileset dir="../polyglot/eclipseUpdates/features" includes="polyglot_*.jar"/>
        </copy>
    </target>

    <target name="export.features">
		<echo message="Building feature jars for ${feature.list}..."/>
		<for param="feature" values="${feature.list}">
		    <echo message="*** Building feature ${feature} ***"/>
			<ant antfile="../${feature}.feature/exportFeature.xml" target="build.feature.jar" dir="../${feature}.feature">
                <property name="imp.build.qualifier" value="${imp.build.qualifier}"/>
			</ant>
		</for>
		<echo message="Done building feature jars."/>
	</target>
</project>

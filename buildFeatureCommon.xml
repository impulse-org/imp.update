<?xml version="1.0" encoding="UTF-8"?>
<project name="featureCommon" basedir=".">
	<target name="build.feature.jar" depends="init" description="Build the feature jar for IMP for an update site.">
		<property name="feature.base" value="${feature.temp.folder}"/>
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="gather.bin.parts" inheritAll="false">
			<param name="arch" value="*"/>
			<param name="ws" value="*"/>
			<param name="nl" value="*"/>
			<param name="os" value="*"/>
			<param name="feature.base" value="${feature.temp.folder}"/>
		</antcall>
		<jar destfile="${feature.destination}/${feature.name}_${feature.version}.jar" basedir="${feature.temp.folder}/features/${feature.name}_${feature.version}"/>
        <antcall target="build.source.feature"/>
		<delete dir="${feature.temp.folder}"/>
		<antcall target="gather.plugin.jars"/>
		<echo message="Feature jar build complete."/>
	</target>

	<target name="gather.bin.parts" depends="init" if="feature.base">
		<mkdir dir="${feature.base}/features/${feature.name}_${feature.version}"/>
		<copy todir="${feature.base}/features/${feature.name}_${feature.version}" failonerror="true" overwrite="false">
			<fileset dir="${basedir}">
				<include name="feature.xml"/>
				<include name="feature.properties"/>
				<include name="epl-v10.html"/>
	            <include name="license.html"/>
				<include name="eclipse_update_120.jpg"/>
			</fileset>
		</copy>
	</target>

	<target name="publish" depends="init">
		<copy todir="../../artifacts" file="${feature.name}_${feature.version}.jar"/>
	</target>

	<!-- ========================================================================================= -->

	<target name="build.child">
		<ant antfile="../${plugin.id}/exportPlugin.xml" inheritAll="false" dir="../${plugin.id}" target="build.update.jar"/>
	</target>

	<target name="copy.child">
		<loadfile property="plugin.version" srcfile="../${plugin.id}/META-INF/MANIFEST.MF">
			<filterchain>
				<containsregex pattern="Bundle-Version:"/>
				<replaceregex pattern="Bundle-Version: (.*)" replace="\1"/>
				<striplinebreaks/>
			</filterchain>
		</loadfile>
		<echo message="Copying ${plugin.id} version ${plugin.version}"/>
		<copy todir="plugins" file="../${plugin.id}/${plugin.id}_${plugin.version}.jar"/>
		<copy todir="plugins" file="../${plugin.id}/${plugin.id}.source_${plugin.version}.jar"/>
	</target>

    <target name="build.source.feature" depends="init">
        <filter token="feature.id" value="${feature.name}"/>
        <filter token="feature.version" value="${feature.version}"/>
        <filter token="provider.name" value="rfuhrer@watson.ibm.com"/>
    	<filter token="plugin.list" value=""/>
    	<property name="feature.manifest.file" value="${feature.temp.folder}/feature.xml"/>
        <copy file="../org.eclipse.imp.update/SourceFeatureManifest.in" tofile="${feature.manifest.file}" filtering="true"/>
    	<for param="plugin.id" values="${plugins.list}">
    		<antcall target="gen.plugin.source.line">
    		    <param name="plugin.id" value="${plugin.id}"/>
    			<param name="file" value="${feature.manifest.file}"/>
    	    </antcall>
    	</for>
    	<echo message="&lt;/feature&gt;" file="${feature.manifest.file}" append="true"/>
        <concat>
            <fileset file="${feature.temp.folder}/feature.xml"/>
        </concat>
        <jar destfile="${feature.destination}/${feature.name}.source_${feature.version}.jar">
        	<fileset dir="${feature.temp.folder}" includes="feature.xml"/>
        	<fileset dir="." includes="feature.properties"/>
        </jar>
    </target>

	<target name="gen.plugin.source.line">
        <loadfile property="plugin.version" srcfile="../${plugin.id}/META-INF/MANIFEST.MF">
            <filterchain>
                <containsregex pattern="Bundle-Version:"/>
                <replaceregex pattern="Bundle-Version: (.*)" replace="\1"/>
                <striplinebreaks/>
            </filterchain>
        </loadfile>
		<echo file="${file}" append="true"
		   message="    &lt;plugin id=&quot;${plugin.id}.source&quot; version=&quot;${plugin.version}&quot; unpack=&quot;false&quot;/&gt;
"/>
	</target>
	<!-- ========================================================================================= -->

	<target name="zip.distribution" depends="init" description="Create a zip containing all the plug-ins and features for the feature: ${feature.name}.">
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="gather.bin.parts">
			<param name="arch" value="*"/>
			<param name="ws" value="*"/>
			<param name="nl" value="*"/>
			<param name="include.children" value="true"/>
			<param name="feature.base" value="${feature.temp.folder}"/>
			<param name="os" value="aix,hpux,linux,macosx,qnx,solaris,win32"/>
		</antcall>
		<zip destfile="${feature.destination}/${feature.name}_${feature.version}.bin.dist.zip" basedir="${feature.temp.folder}" filesonly="false" whenempty="skip" update="false"/>
		<delete dir="${feature.temp.folder}"/>
	</target>

	<target name="zip.sources" depends="init">
		<delete dir="${feature.temp.folder}"/>
		<mkdir dir="${feature.temp.folder}"/>
		<antcall target="all.children">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins/${feature.name}.source_${feature.version}/src"/>
			<param name="include.children" value="true"/>
			<param name="target" value="gather.sources"/>
		</antcall>
		<zip destfile="${feature.destination}/${feature.name}_${feature.version}.src.zip" basedir="${feature.temp.folder}" filesonly="true" whenempty="skip" update="false"/>
		<delete dir="${feature.temp.folder}"/>
	</target>

	<target name="clean" depends="init" description="Clean the feature: ${feature.name} of all the zips, jars and logs created.">
		<delete file="${feature.destination}/${feature.name}_${feature.version}.jar"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.bin.dist.zip"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.log.zip"/>
		<delete file="${feature.destination}/${feature.name}_${feature.version}.src.zip"/>
		<delete dir="${feature.temp.folder}"/>
		<antcall target="all.children">
			<param name="target" value="clean"/>
		</antcall>
	</target>

	<!-- ========================================================================================= -->

	<target name="gather.sources">
		<antcall target="children">
			<param name="destination.temp.folder" value="${feature.temp.folder}/plugins/${feature.name}.source_${feature.version}/src"/>
			<param name="target" value="gather.sources"/>
		</antcall>
	</target>
</project>
